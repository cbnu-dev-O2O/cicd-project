name: CI/CD for Spring Boot Application

on:
  push:
    branches: ["master"]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    # 1.1 리포지토리 체크아웃
    - name: Checkout code
      uses: actions/checkout@v3

    # 1.2 Gradle 실행 권한 부여
    - name: Give Gradle wrapper execute permission
      run: chmod +x ./gradlew

    # 1.3 Java 버전 설정
    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    # 1.4 Gradle 빌드 실행
    - name: Build with Gradle
      run: |
        ./gradlew clean build

    # 1.5 빌드 결과물 전송 (SCP 명령어 사용)
    - name: Upload build artifact to Lightsail
      env:
        LIGHTSAIL_HOST: ${{ secrets.LIGHTSAIL_HOST }}
        LIGHTSAIL_SSH_KEY: ${{ secrets.LIGHTSAIL_SSH_KEY }}
        LIGHTSAIL_USERNAME: ${{ secrets.LIGHTSAIL_USERNAME }}
      run: |
        echo "${LIGHTSAIL_SSH_KEY}" > lightsail.pem
        chmod 600 lightsail.pem  # 권한 설정
        scp -i lightsail.pem -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null build/libs/*.jar ${LIGHTSAIL_USERNAME}@${LIGHTSAIL_HOST}:/home/${LIGHTSAIL_USERNAME}/app/
        rm lightsail.pem

    # 1.6 권한 설정 (애플리케이션 실행 전)
   # - name: Set permissions for app directory and log files
    #  run: |
     #   chmod -R 755 /home/${LIGHTSAIL_USERNAME}/app/
     #   chmod 777 /home/${LIGHTSAIL_USERNAME}/app/app.log

    # 1.7 Lightsail에서 애플리케이션 실행
    - name: Start application on Lightsail
      env:
        LIGHTSAIL_HOST: ${{ secrets.LIGHTSAIL_HOST }}
        LIGHTSAIL_SSH_KEY: ${{ secrets.LIGHTSAIL_SSH_KEY }}
        LIGHTSAIL_USERNAME: ${{ secrets.LIGHTSAIL_USERNAME }}
      run: |
        # SSH 키 파일 생성
        echo "${LIGHTSAIL_SSH_KEY}" > lightsail.pem
        chmod 600 lightsail.pem

        # SSH 연결 및 환경 변수 확인
        ssh -i lightsail.pem -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ${LIGHTSAIL_USERNAME}@${LIGHTSAIL_HOST} << 'EOF'
          # LIGHTSAIL_USERNAME 값 출력
          echo "LIGHTSAIL_USERNAME is: $LIGHTSAIL_USERNAME"

          # 애플리케이션 디렉토리 및 로그 파일 준비  
          mkdir -p /home/${LIGHTSAIL_USERNAME}/app/
          touch /home/${LIGHTSAIL_USERNAME}/app/app.log
          chmod 755 /home/${LIGHTSAIL_USERNAME}/app/
          chmod 666 /home/${LIGHTSAIL_USERNAME}/app/app.log

          # 기존 Java 애플리케이션 종료
          if pgrep -f 'java -jar' > /dev/null; then
            echo "Stopping running Java application..."
            pkill -f 'java -jar'
            sleep 5  # 종료 대기
          else
            echo "No Java application running."
          fi

          # 새 애플리케이션 실행
          echo "Starting new Java application..."
          nohup java -jar /home/${LIGHTSAIL_USERNAME}/app/*.jar > /home/${LIGHTSAIL_USERNAME}/app/app.log 2>&1 &
          sleep 3  # 프로세스 안정화 대기

          # 프로세스 상태 확인
          if pgrep -f 'java -jar' > /dev/null; then
            echo "Application started successfully."
            ps aux | grep '[j]ava'
          else
            echo "Failed to start the application."
            exit 1
          fi
        EOF

        # SSH 키 파일 삭제
        rm lightsail.pem


