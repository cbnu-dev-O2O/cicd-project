name: CI/CD for Lightsail with Docker

on:
  push:
    branches:
      - master

jobs:
  # Job 1: Build Docker Image
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Build Docker Image
        run: |
          docker build -t my-app:latest .

  # Job 2: Transfer Docker Image to Lightsail
  transfer:
    name: Transfer Docker Image
    runs-on: ubuntu-latest

    needs: build  # Dependency on the build job
    steps:
      - name: Transfer Docker Image to Lightsail
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.LIGHTSAIL_HOST }}
          username: ${{ secrets.LIGHTSAIL_USERNAME }}
          key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
          script: |
            # Step 1: Save the Docker image to the Lightsail server (this will avoid creating tar file locally)
            docker save my-app:latest | ssh -i ${{ secrets.LIGHTSAIL_SSH_KEY }} ${{ secrets.LIGHTSAIL_USERNAME }}@${{ secrets.LIGHTSAIL_HOST }} "docker load"

  # Job 3: Deploy Docker Container
  deploy:
    name: Deploy Docker Container
    runs-on: ubuntu-latest

    needs: transfer  # Dependency on the transfer job
    steps:
      - name: Run Docker Image on Lightsail
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.LIGHTSAIL_HOST }}
          username: ${{ secrets.LIGHTSAIL_USERNAME }}
          key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
          script: |
            # Step 1: Stop and remove existing container if any
            docker stop app || true
            docker rm app || true

            # Step 2: Run the container on port 8080
            docker run -d --name app -p 8080:8080 --restart unless-stopped my-app:latest

            # Step 3: Check if the container is running
            docker ps
